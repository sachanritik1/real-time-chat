generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  chats     Chat[]   // One-to-many relation with Chat
  roomId    String?  // Nullable foreign key to Room
  room      Room?    @relation(fields: [roomId], references: [id])
  upVotes   UpVote[] // One-to-many relation with UpVote
}

model Chat {
  id        String   @id @default(cuid())
  message   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  userId    String   // Foreign key to User
  user      User     @relation(fields: [userId], references: [id])
  roomId    String   // Foreign key to Room
  room      Room     @relation(fields: [roomId], references: [id])
  upVotes   UpVote[] // One-to-many relation with UpVote
}

model Room {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  users     User[]   // One-to-many relation with User
  chats     Chat[]   // One-to-many relation with Chat
}

model UpVote {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  userId    String   // Foreign key to User
  user      User     @relation(fields: [userId], references: [id])
  chatId    String   // Foreign key to Chat
  chat      Chat     @relation(fields: [chatId], references: [id])
}
